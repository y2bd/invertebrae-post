{"version":3,"sources":["serviceWorker.ts","util/useTyping.ts","util/useInterval.ts","text/Phrase.tsx","Mailbox.tsx","text/Keyword.tsx","text/Paragraph.tsx","util/arrayEq.ts","containers/Prompt.tsx","Chapter.tsx","containers/Frame.tsx","containers/Wordbank.tsx","App.tsx","Preload.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","DefaultDelay","useTyping","text","onFinish","fast","arguments","length","undefined","_React$useState","React","_React$useState2","Object","slicedToArray","renderText","setRenderText","_React$useState3","_React$useState4","delay","setDelay","_React$useState5","_React$useState6","finished","setFinished","callback","savedCallback","useRef","savedId","useEffect","current","setInterval","clearInterval","useInterval","stop","nextText","slice","Phrase","props","_useTyping","react","className","MailboxContext","sendMessage","register","unregister","Mailbox","receivers","setReceivers","message","console","log","type","_i","_Object$keys","keys","key","messageType","mailboxId","receiver","oldReceivers","objectSpread","defineProperty","contextProps","Provider","value","children","Keyword","consumed","setConsumed","onSendToWordbox","word","payload","KeywordDraggable","assign","onDoubleClick","_dnd$useDrag","dnd","useDrag","item","id","source","canDrag","end","_","monitor","didDrop","onConsumed","_dnd$useDrag2","dragRef","ref","Paragraph","_ref","texts","textIndex","setTextIndex","progress","textsLength","map","Comp","i","arrayEquals","left","right","initialState","reducer","state","action","words","chapterName","concat","filter","Prompt","solutions","onAccept","uselessOnFinish","_React$useReducer","_React$useReducer2","dispatch","_dnd$useDrop","useDrop","accept","canDrop","collect","hovering","isOver","drop","target","_dnd$useDrop2","collectionProps","dropRef","solutionNextChapter","solution","answer","next","onAcceptIfSolved","_React$useContext","onAddToPrompt","currentChapter","text_Keyword","onClick","paragraph","text_Paragraph","Chapter","chapter","onNavigate","noop","processedStory","body","flatMap","line","idx","phrases","split","text_Phrase","name","containers_Prompt","Frame","memo","react_default","a","createElement","page","perPage","pageCount","Math","floor","pc","newWords","toConsumableArray","splice","max","min","Wordbank","useCallback","useReducer","currentPageCount","prevPage","nextPage","useContext","onAddToWordbox","onSendToPrompt","story","App","useState","start","beforeName","chapterGraph","setChapterGraph","chapterPointer","setChapterPointer","_React$useState7","showHelp","setShowHelp","_React$useState8","_React$useState9","showHuh","setShowHuh","canGoBefore","pushNewChapter","nextUp","newChapterGraph","setPlayBefore","setTimeout","audioRef","pause","load","play","goBefore","onHelp","onHuh","onCloseHelp","_React$useState10","_React$useState11","playBefore","src_Mailbox","src","loop","autoPlay","containers_Frame","style","display","flexDirection","height","src_Chapter","chapters","Fragment","containers_Wordbank","Preload","showGame","setShowGame","sg","src_App_0","ReactDOM","render","cjs","backend","HTML5Backend","src_Preload_0","document","getElementById","navigator","serviceWorker","ready","then","registration"],"mappings":"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","file":"static/js/main.12a3c684.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport useInterval from \"../util/useInterval\";\n\nexport const DefaultDelay = 25;\n\nexport default function useTyping(\n  text: string,\n  onFinish: () => void,\n  fast = false,\n): [string] {\n  const [renderText, setRenderText] = React.useState(\"\");\n  const [delay, setDelay] = React.useState(DefaultDelay);\n  const [finished, setFinished] = React.useState(false);\n\n  useInterval(stop => {\n    if (renderText === text && !finished) {\n      stop();\n      onFinish();\n      setFinished(true);\n    }\n\n    // if we made it longer for effect, set it right back next time\n    if (delay > DefaultDelay) {\n      setDelay(DefaultDelay);\n    }\n\n    const nextText = text.slice(0, renderText.length + 1);\n    if (nextText[nextText.length - 1] === \".\") {\n      setDelay(DefaultDelay * 20);\n    }\n\n    if (nextText[nextText.length - 1] === \"?\") {\n      setDelay(DefaultDelay * 20);\n    }\n\n    if (nextText[nextText.length - 1] === \",\") {\n      setDelay(DefaultDelay * 10);\n    }\n\n    setRenderText(text.slice(0, renderText.length + 1));\n  }, fast ? 0 : delay /* Math.round(delay - 10 + 20 * Math.random()) */);\n\n  return [renderText];\n}\n","import { useEffect, useRef } from \"react\";\n\ntype IntervalCallback = (stop: () => void) => void;\n\nexport default function useInterval(callback: IntervalCallback, delay: number) {\n  const savedCallback = useRef<IntervalCallback>();\n  const savedId = useRef<NodeJS.Timeout>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current && savedId.current) {\n        savedCallback.current(() => clearInterval(savedId.current!));\n      }\n    }\n\n    if (delay !== null) {\n      savedId.current = setInterval(tick, delay);\n      return () => clearInterval(savedId.current!);\n    }\n  }, [delay]);\n}\n","import * as React from \"react\";\nimport useTyping from \"../util/useTyping\";\nimport \"./Phrase.css\";\nimport { Finishable } from \"./Text\";\n\ninterface PhraseProps extends Finishable {\n  readonly text: string;\n  readonly fast?: boolean;\n}\n\nconst Phrase: React.FC<PhraseProps> = React.memo(props => {\n  const [renderText] = useTyping(props.text, props.onFinish, props.fast);\n\n  return <span className=\"Phrase\">{renderText}</span>;\n});\n\nexport default Phrase;\n","import * as React from \"react\";\nimport { string } from \"prop-types\";\n\nexport type Message = {\n    type: string;\n    payload: any;\n}\n\nexport type Receiver = (message: Message) => void;\n\nexport type MailboxContextProps = {\n    sendMessage(message: Message): void;\n    register(messageType: string, mailboxId: string, receiver: Receiver): void;\n    unregister(messageType: string, mailboxId: string): void;\n}\n\nexport const MailboxContext = React.createContext<MailboxContextProps>({\n    sendMessage: () => void 0,\n    register: () => void 0,\n    unregister: () => void 0\n})\n\nconst Mailbox: React.FC = React.memo((props) => {\n    const [receivers, setReceivers] = React.useState<Record<string, Record<string, Receiver>>>({});\n\n    const sendMessage = React.useCallback((message: Message) => {\n        console.log(\"sent\", message);\n\n        if (receivers[message.type]) {\n            for (const key of Object.keys(receivers[message.type])) {\n                receivers[message.type][key](message);\n            }\n        }\n    }, [receivers]);\n\n    const register = React.useCallback((messageType: string, mailboxId: string, receiver: Receiver) => {\n        console.log(\"registering\", mailboxId, messageType);\n        \n        setReceivers(oldReceivers => ({\n            ...oldReceivers,\n            [messageType]: {\n                ...oldReceivers[messageType],\n                [mailboxId]: receiver\n            },\n        }));\n    }, [setReceivers]);\n\n    const unregister = React.useCallback((messageType: string, mailboxId: string) => {\n        console.log(\"unregistering\", mailboxId, messageType);\n        \n        if (receivers[messageType] && receivers[messageType][mailboxId]) {\n            delete receivers[messageType][mailboxId];\n\n            if (Object.keys(receivers[messageType]).length <= 0) {\n                delete receivers[messageType];\n            }\n        }\n\n        setReceivers(receivers);\n    }, [receivers, setReceivers]);\n\n    const contextProps = React.useMemo<MailboxContextProps>(() => ({\n        sendMessage,\n        register,\n        unregister\n    }), [sendMessage, register]);\n    \n    return (\n        <MailboxContext.Provider value={contextProps} >\n            {props.children}\n        </MailboxContext.Provider>\n    );\n});\n\nexport default Mailbox;","import { __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ as dnd } from \"react-dnd\";\nimport * as React from \"react\";\nimport useTyping from \"../util/useTyping\";\nimport { Finishable } from \"./Text\";\nimport \"./Keyword.css\";\nimport { MailboxContext } from \"../Mailbox\";\n\ninterface KeywordProps extends Finishable {\n  readonly text: string;\n  readonly location: \"story\" | \"puzzle\" | \"wordbank\";\n  readonly fast?: boolean;\n\n  readonly onConsumed?: (consumedText: string) => void;\n  readonly onDoubleClick?: (word: string) => void;\n}\n\ninterface KeywordDraggableProps extends KeywordProps {\n  readonly renderText: string;\n  readonly consumed: boolean;\n  readonly setConsumed: (arg: boolean) => void;\n}\n\nexport interface KeywordDragProps {\n  readonly type: \"keyword\";\n  readonly id: string;\n  readonly source: \"story\" | \"puzzle\" | \"wordbank\";\n}\n\nconst Keyword: React.FC<KeywordProps> = React.memo(props => {\n  const [renderText] = useTyping(props.text, props.onFinish, props.fast);\n  const [consumed, setConsumed] = React.useState(false);\n\n  const { sendMessage } = React.useContext(MailboxContext);\n\n  const onSendToWordbox = React.useCallback((word: string) => {\n    sendMessage({ type: \"addToWordbox\", payload: word });\n    setConsumed(true);\n  }, [sendMessage]);\n\n  return (\n    <KeywordDraggable\n      {...props}\n      // react-dnd-hooks don't really work yet\n      // this makes them update according to props...\n      key={props.text + consumed}\n      consumed={consumed}\n      setConsumed={setConsumed}\n      renderText={renderText}\n      onDoubleClick={props.location === \"story\" ? onSendToWordbox : props.onDoubleClick}\n    />\n  );\n});\n\n// useDrag won't update canDrag via state, so we need a child component to cause update via props\nconst KeywordDraggable: React.FC<KeywordDraggableProps> = React.memo(props => {\n  const [_, dragRef] = dnd.useDrag({\n    item: {\n      type: \"keyword\",\n      id: props.text,\n      source: props.location\n    } as KeywordDragProps,\n    canDrag: !props.consumed,\n    end: (_, monitor) => {\n      if (monitor.didDrop()) {\n        props.setConsumed(true);\n        if (props.onConsumed) {\n          props.onConsumed(props.text);\n        }\n      }\n    }\n  });\n\n  const onDoubleClick = React.useCallback(\n    () => props.onDoubleClick && props.onDoubleClick(props.text),\n    [props.onDoubleClick, props.text]\n  );\n\n  return (\n    <span\n      className={\"Keyword\" + (props.consumed ? \" consumed\" : \"\") + (props.location === \"story\" ? \" story\" : \"\")}\n      ref={dragRef}\n      onDoubleClick={onDoubleClick}\n    >\n      {props.renderText}\n    </span>\n  );\n});\n\nexport default Keyword;\n","import * as React from \"react\";\nimport { Finishable } from \"./Text\";\nimport \"./Paragraph.css\";\n\ninterface ParagraphProps extends Finishable {\n  readonly texts: Array<React.ComponentType<Finishable>>;\n  readonly fast?: boolean;\n\n  onFinish(): void;\n}\n\nconst Paragraph: React.FC<ParagraphProps> = React.memo(\n  ({ fast, texts, onFinish }) => {\n    const [textIndex, setTextIndex] = React.useState(0);\n    const [finished, setFinished] = React.useState(false);\n\n    const progress = React.useCallback(\n      () => !finished && setTextIndex(textIndex + 1),\n      [finished, textIndex, setTextIndex]\n    );\n\n    const textsLength = texts.length;\n    React.useEffect(() => {\n      if (textIndex >= textsLength && !finished) {\n        onFinish();\n        setFinished(true);\n      }\n    }, [textIndex, finished, setFinished, textsLength, onFinish]);\n\n    return (\n      <div className=\"Paragraph\">\n        {texts.slice(0, fast ? texts.length : textIndex + 1).map((Comp, i) => (\n          <Comp key={i} onFinish={progress} />\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Paragraph;\n","export function arrayEquals(left: unknown[], right: unknown[]) {\n    if (left.length !== right.length) {\n        return false;\n    }\n\n    for (let i = 0; i < left.length; i ++) {\n        if (left[i] !== right[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}","import * as React from \"react\";\nimport \"./Prompt.css\";\nimport Keyword, { KeywordDragProps } from \"../text/Keyword\";\n\nimport { __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ as dnd } from \"react-dnd\";\nimport { arrayEquals } from \"../util/arrayEq\";\nimport { Solution } from \"../Story\";\nimport { MailboxContext, Receiver } from \"../Mailbox\";\n\n// state\n\nconst initialState = {};\n\ntype State = { [chapterName: string]: string[] };\ntype Action =\n  | { type: \"addWord\"; chapterName: string; word: string }\n  | { type: \"removeWord\"; chapterName: string; word: string };\n\nfunction reducer(state: State, action: Action) {\n  const words: string[] = state[action.chapterName] || [];\n\n  switch (action.type) {\n    case \"addWord\":\n      return {\n        ...state,\n        [action.chapterName]: words.concat(action.word)\n      };\n    case \"removeWord\":\n      return {\n        ...state,\n        // technically bug if you have two of the same word\n        [action.chapterName]: words.filter(word => word !== action.word)\n      };\n    default:\n      return state;\n  }\n}\n\n// component\ninterface PromptProps {\n  readonly chapterName: string;\n  readonly solutions: Solution[];\n  readonly onAccept: (nextChapterName: string) => void;\n}\n\nconst Prompt: React.FC<PromptProps> = React.memo(({ chapterName, solutions, onAccept }) => {\n  const uselessOnFinish = React.useCallback(() => void 0, []);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const words = state[chapterName] || [];\n\n  const [collectionProps, dropRef] = dnd.useDrop<\n    KeywordDragProps,\n    { target: \"puzzle\" },\n    { hovering: boolean, canDrop: boolean }\n  >({\n    accept: \"keyword\",\n    canDrop: item => {\n      return item.source !== \"puzzle\";\n    },\n    collect: monitor => ({\n      canDrop: monitor.canDrop(),\n      hovering: monitor.isOver()\n    }),\n    drop: item => {\n      dispatch({ type: \"addWord\", chapterName, word: item.id });\n      return { target: \"puzzle\" };\n    }\n  });\n\n  const onConsumed = React.useCallback(\n    (word: string) => dispatch({ type: \"removeWord\", chapterName, word }),\n    [chapterName, dispatch]\n  );\n\n  const solutionNextChapter = React.useMemo(\n    () => {\n      for (let i = 0; i < solutions.length; i++) {\n        const solution = solutions[i];\n        if (arrayEquals(solution.answer, words)) {\n          return solution.next;\n        }\n      }\n      return undefined;\n    },\n    [solutions, words]\n  )\n\n  const onAcceptIfSolved = \n    React.useCallback(\n      () => solutionNextChapter && onAccept(solutionNextChapter), \n      [onAccept, solutionNextChapter]\n    );\n\n  const { sendMessage, register, unregister } = React.useContext(MailboxContext);\n\n  const onAddToPrompt: Receiver = React.useCallback(\n    message => {\n      if (message.payload.currentChapter === chapterName) {\n        dispatch({ type: \"addWord\", \n          chapterName: message.payload.currentChapter, \n          word: message.payload.word \n        });\n      }\n    }, \n    [chapterName, dispatch]\n  );\n\n  React.useEffect(() => {\n    register(\"addToPrompt\", \"prompt-\" + chapterName, onAddToPrompt);\n    return () => unregister(\"addToPrompt\", \"prompt-\" + chapterName);\n  }, [chapterName]);\n\n  const onSendToWordbox = React.useCallback((word: string) => {\n    dispatch({ type: \"removeWord\", chapterName, word });\n    sendMessage({ type: \"addToWordbox\", payload: word });\n  }, [chapterName, dispatch, sendMessage]);\n\n  return (\n    <div\n      className={\"Prompt\" + (collectionProps.hovering && collectionProps.canDrop ? \" hovering\" : \"\")}\n      ref={dropRef}\n    >\n      <span className=\"Symbol\">{\">\"}</span>\n      {words.map(word => (\n        <Keyword\n          key={word}\n          text={word}\n          location={\"puzzle\"}\n          onFinish={uselessOnFinish}\n          onConsumed={onConsumed}\n          onDoubleClick={onSendToWordbox}\n        />\n      ))}\n      <span \n        className={\"OK\" + (solutionNextChapter ? \" activated\" : \"\")}\n        onClick={onAcceptIfSolved}\n      >OK</span>\n    </div>\n  );\n});\n\nexport default Prompt;\n","import * as React from \"react\";\nimport { Chapter as ChapterData } from \"./Story\";\nimport { Finishable } from \"./text/Text\";\nimport Phrase from \"./text/Phrase\";\nimport Keyword from \"./text/Keyword\";\nimport Paragraph from \"./text/Paragraph\";\nimport Prompt from \"./containers/Prompt\";\n\ninterface ChapterProps {\n    readonly chapter: ChapterData;\n\n    readonly onNavigate: (chapterName: string) => void;\n}\n\nconst phrase = (text: string, fast?: boolean) => (props: Finishable) => (\n    <Phrase text={text} fast={fast} onFinish={props.onFinish} />\n);\n\nconst keyword = (text: string, fast?: boolean) => (props: Finishable) => (\n    <Keyword text={text} fast={fast} location={\"story\"} onFinish={props.onFinish} />\n);\n\nconst paragraph = (texts: Array<React.ComponentType<Finishable>>, key: string | number, fast?: boolean) => (\n    props: Finishable\n) => <Paragraph texts={texts} fast={fast} onFinish={props.onFinish} />;\n\nconst Chapter: React.FC<ChapterProps> = React.memo(({ chapter, onNavigate }) => {\n    const noop = React.useCallback(() => void 0, []);\n\n    const processedStory = React.useMemo(() => {\n        const body = chapter.body.flatMap((line, idx) => {\n            // split to get the keywords in [brackets]\n            // all odd numbered indexes will be keywords\n            // means that brackets are not allowed in the story\n            const phrases = line.split(/[\\[\\]]/).map((text, i) => {\n                return (i % 2 === 1 ? keyword : phrase)(text, chapter.fast);\n            })\n\n            return chapter.fast ? phrases : [paragraph(phrases, idx, chapter.fast)];\n        });\n\n        return paragraph(body, chapter.name, chapter.fast)({ onFinish: noop });\n    }, [chapter, noop])\n\n    return <>\n        {processedStory}\n        <Prompt \n            chapterName={chapter.name}\n            solutions={chapter.solutions} \n            onAccept={onNavigate} \n        />\n    </>;\n});\n\nexport default Chapter;","import React from \"react\";\nimport \"./Frame.css\";\n\nconst Frame: React.FC = React.memo(props => {\n  return <div className=\"Frame\">{props.children}</div>;\n});\n\nexport default Frame;\n","import React from \"react\";\nimport \"./Wordbank.css\";\nimport Keyword, { KeywordDragProps } from \"../text/Keyword\";\n\nimport { __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ as dnd } from \"react-dnd\";\nimport { MailboxContext, Receiver } from \"../Mailbox\";\n\n// state\n\ntype State = typeof initialState;\nconst initialState = {\n  words: [\"set\", \"close\"] as string[],\n  page: 0\n};\n\ntype Action =\n  | { type: \"addWord\"; word: string }\n  | { type: \"removeWord\"; word: string }\n  | { type: \"prevPage\" }\n  | { type: \"nextPage\" }\n\nconst perPage = 14;\nconst pageCount = (state: State) => Math.floor(state.words.length / perPage) + 1;\n\nfunction reducer(state: State, action: Action) {\n  const pc = pageCount(state);\n\n  switch (action.type) {\n    case \"addWord\":\n      const newWords = [...state.words];\n      newWords.splice(state.page * perPage + perPage - 1, 0, action.word);\n      return {\n        ...state,\n        // always put it at the bottom of the current page\n        words: newWords\n      };\n    case \"removeWord\":\n      return {\n        ...state,\n        // technically bug if you have two of the same word\n        words: state.words.filter(word => word !== action.word)\n      };\n    case \"prevPage\":\n      return {\n        ...state,\n        page: Math.max(0, state.page - 1)\n      }\n    case \"nextPage\":\n      return {\n        ...state,\n        page: Math.min(pc - 1, state.page + 1)\n      };\n    default:\n      return state;\n  }\n}\n\n// component\ninterface WordbankProps { \n  readonly currentChapter: string;\n}\n\nconst Wordbank: React.FC<WordbankProps> = React.memo(({ currentChapter }) => {\n  const uselessOnFinish = React.useCallback(() => void 0, []);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const [collectionProps, dropRef] = dnd.useDrop<\n    KeywordDragProps,\n    { target: \"wordbank\" },\n    { hovering: boolean, canDrop: boolean }\n  >({\n    accept: \"keyword\",\n    canDrop: item => {\n      return item.source !== \"wordbank\";\n    },\n    collect: monitor => ({\n      canDrop: monitor.canDrop(),\n      hovering: monitor.isOver()\n    }),\n    drop: item => {\n      // TODO don't allow if keyword has been consumed\n      dispatch({ type: \"addWord\", word: item.id });\n      return { target: \"wordbank\" };\n    }\n  });\n\n  const onConsumed = React.useCallback(\n    (word: string) => dispatch({ type: \"removeWord\", word }),\n    [dispatch]\n  );\n\n  const currentPageCount = pageCount(state);\n\n  const prevPage = React.useCallback(() => dispatch({ type: \"prevPage\" }), [dispatch]);\n  const nextPage = React.useCallback(() => dispatch({ type: \"nextPage\" }), [dispatch]);\n\n  const { sendMessage, register, unregister } = React.useContext(MailboxContext);\n\n  const onAddToWordbox: Receiver = React.useCallback(message => dispatch({ type: \"addWord\", word: message.payload }), [dispatch]);\n  React.useEffect(() => {\n    register(\"addToWordbox\", \"wordbox\", onAddToWordbox);\n    return () => unregister(\"addToWordbox\", \"wordbox\");\n  }, []);\n\n  const onSendToPrompt = React.useCallback((word: string) => {\n    dispatch({ type: \"removeWord\", word });\n    sendMessage({ type: \"addToPrompt\", payload: { word, currentChapter } });\n  }, [dispatch, currentChapter, sendMessage]);\n\n  return (\n    <div\n      className={\"Wordbank\" + (collectionProps.hovering && collectionProps.canDrop ? \" hovering\" : \"\")}\n      ref={dropRef}\n    >\n      {state.words.slice(perPage * state.page, perPage * state.page + perPage).map(word => (\n        <Keyword\n          key={word}\n          text={word}\n          location={\"wordbank\"}\n          onFinish={uselessOnFinish}\n          onConsumed={onConsumed}\n          onDoubleClick={onSendToPrompt}\n        />\n      ))}\n      <div className={\"Pagination\" + (currentPageCount > 1 ? \" activated\" : \"\")}>\n        <span \n          className={\"Previous\" + (state.page > 0 ? \" activated\" : \"\")}\n          onClick={prevPage}\n        >{\"<\"}</span>\n        <span \n          className={\"Next\" + (state.page < currentPageCount - 1 ? \" activated\" : \"\")}\n          onClick={nextPage}\n        >{\">\"}</span>\n      </div>\n    </div>\n  );\n});\n\nexport default Wordbank;\n","import React from \"react\";\nimport \"./App.css\";\nimport Chapter from \"./Chapter\";\nimport Frame from \"./containers/Frame\";\nimport Wordbank from \"./containers/Wordbank\";\nimport Mailbox from \"./Mailbox\";\nimport { loadStory } from \"./Story\";\n\nconst story = loadStory();\n\ninterface ChapterNode {\n  readonly chapterName: string;\n  readonly beforeName: string | null;\n}\n\ninterface ChapterGraph {\n  [chapterName: string]: ChapterNode;\n}\n\nconst App: React.FC = () => {\n  const [chapterGraph, setChapterGraph] = React.useState<ChapterGraph>({\n    [story.start]: {\n      chapterName: story.start,\n      beforeName: null\n    },\n  })\n\n  const [chapterPointer, setChapterPointer] = React.useState(story.start);\n\n  const [showHelp, setShowHelp] = React.useState(false);\n  const [showHuh, setShowHuh] = React.useState(false);\n\n  const currentChapter = chapterGraph[chapterPointer];\n  const canGoBefore = currentChapter.beforeName !== null;\n\n  const pushNewChapter = React.useCallback((chapterName: string) => {\n    let nextUp = chapterGraph[chapterName];\n    if (!nextUp) {\n      nextUp = {\n        chapterName,\n        beforeName: chapterPointer\n      };\n    } else {\n      nextUp = {\n        ...nextUp,\n        beforeName: chapterPointer\n      };\n    }\n\n    const newChapterGraph = {\n      ...chapterGraph,\n      [chapterName]: nextUp\n    };\n\n    setChapterGraph(newChapterGraph);\n    setChapterPointer(chapterName);\n\n    if (chapterName === \"the-details\") {\n      setPlayBefore(true);\n      setTimeout(() => {\n        audioRef.current.pause();\n        audioRef.current.load();\n        audioRef.current.play();\n      });\n    }\n  }, [chapterPointer, setChapterPointer, chapterGraph, setChapterGraph]);\n\n  const goBefore = React.useCallback(() => {\n    if (!canGoBefore) {\n      return;\n    }\n\n    if (currentChapter.chapterName === \"the-details\") {\n      setPlayBefore(false);\n      setTimeout(() => {\n        audioRef.current.pause();\n        audioRef.current.load();\n        audioRef.current.play();\n      });\n    }\n\n    setChapterPointer(currentChapter.beforeName!);\n  }, [canGoBefore, currentChapter, setChapterPointer])\n\n  const onHelp = React.useCallback(() => {\n    setShowHelp(true);\n  }, [setShowHelp]);\n\n  const onHuh = React.useCallback(() => {\n    setShowHuh(!showHuh);\n  }, [showHuh, setShowHuh]);\n\n  const onCloseHelp = React.useCallback(() => {\n    setShowHelp(false);\n    setShowHuh(false);\n  }, [setShowHelp, setShowHuh]);\n\n  const [playBefore, setPlayBefore] = React.useState(false);\n  const audioRef = React.useRef<HTMLAudioElement>(undefined!);\n\n  return (\n    <Mailbox>\n      <div className=\"App\">\n        <audio ref={audioRef} src={playBefore ? \"before.mp3\" : \"timeremaining.mp3\"} loop autoPlay />\n        <Frame>\n          <div className=\"Navigation\">\n            <span \n              className={\"Before\" + (canGoBefore ? \" activated\" : \"\")}\n              onClick={goBefore}\n            >\n              {\"< BEFORE\"}\n            </span>\n            <span\n              className={\"HelpButton\"}\n              onClick={onHelp}\n            >\n              {\"?\"}\n            </span>\n          </div>\n          { /* We render all chapters in queue to keep them in memory */ }\n          {(Object.keys(chapterGraph).map(chapterName => (\n            <div key={chapterName} style={{ \n              display: chapterName === currentChapter.chapterName ? \"flex\" : \"none\",\n              flexDirection: \"column\",\n              height: \"100%\", \n            }}>\n              <Chapter \n                key={chapterName}\n                chapter={story.chapters[chapterName]} \n                onNavigate={pushNewChapter}\n              />\n            </div>\n          )))}\n          {showHelp && (<div className=\"Help\">\n            {showHuh \n              ? (<>\n                  <p>drag bold words from the story to the word bank on the right.</p>\n                  <p>drag (or double-click) words from the word bank to the prompt at the bottom.</p>\n                  <p>if you've found a valid answer, you'll see the OK button light up.</p>\n                  <p>you can always change your answers.</p>\n                </>) \n              : (<>\n                  <p>welcome into <em>invertebrae</em>.</p>\n                  <p>while life may progress along with currency, you as an observer do not.</p>\n                  <p>to the right stores knowledge, and below submits answers.</p> \n                  <p>the future does not cement the past.</p>\n                  <p>good luck.</p>\n                </>)}\n            <div className=\"Buttons\">\n            <span \n              className=\"CloseHelp\"   \n              onClick={onHuh}\n            >{showHuh ? \"OH OK\" : \"HUH?\"}</span>\n            <span \n              className=\"CloseHelp\"   \n              onClick={onCloseHelp}\n            >I'LL TRY</span>\n            </div>\n          </div>)}\n        </Frame>\n        <Wordbank currentChapter={currentChapter.chapterName} />\n      </div>\n    </Mailbox>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport App from \"./App\";\nimport \"./Preload.css\";\n\nconst Preload: React.FC = () => {\n    const [showGame, setShowGame] = React.useState(false);\n\n    const sg = React.useCallback(() => setShowGame(true), [setShowGame]);\n\n    if (showGame) {\n        return <App />;\n    } {\n        return <div className=\"Preload\" onClick={sg}>\n            <span className=\"Message\">\n                Click anywhere to begin.\n            </span>\n        </div>\n    }\n};\n\nexport default Preload;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport Preload from './Preload';\n\nReactDOM.render(\n    <DragDropContextProvider backend={HTML5Backend}>\n        <Preload />\n    </DragDropContextProvider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}